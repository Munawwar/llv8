// The Great Computer Language Shootout
// http://shootout.alioth.debian.org/
//
// modified by Isaac Gouy

if (typeof print == 'undefined') print = console.log;

var c = 0;

function foo(m, isPrime){
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   var i, k, count;

   for (i=2; i<=m; i++) { isPrime[i] = true; }
   count = 0;

   for (i=2; i<=m; i++){
      if (isPrime[i]) {
         for (k=i+i; k<=m; k+=i) isPrime[k] = false;
         count++;
      }
   }
//   c = c + 1;   prin(c);
   return count;
}

function prin(c) {
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // noinline //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    print ("PRINT " + c)
}

function sieve() {
    var sum = 0;
    var aa = 0;
    for (var i = 1; i <= 10; i++ ) {
        var m = (1<<i)*10000;
        var flags = Array(m+1);
        aa = foo(m, flags);
        print ("AA = " + aa);
        sum += aa;
    }
    return sum;
}

var result = sieve();

var expected = 1430116;
print (result == expected);

//print (result) // 487056426
 
